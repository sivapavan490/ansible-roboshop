- name: install shipping component
  hosts: localhost
  become: yes
  tasks:
  - name: Installing maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: checkroboshop user exist or not
    ansible.builtin.command: id roboshop
    register: output # output is variable name
    ignore_errors: true
  
  - when: output.rc !=0
    name: create user roboshop
    ansible.builtin.user:
      name: roboshop

  - name: check /app directory exit or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the director stats
    ansible.builtin.debug:
        msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory  

  - name: download shipping & extract
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command:  mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_relaod:  true


  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load mysql schema
    ansible.builtin.shell: mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  
  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true 

  